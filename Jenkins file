pipeline {
    agent any
           label 'windows' // Ensure this label is assigned to a Windows node
    environment {
        BUILD_CONFIGURATION = 'Release'
        SOLUTION = '**/*.sln'
        BUILD_PLATFORM = 'Any CPU'
    }

    stages {
        stage('Restore NuGet Packages') {
            steps {
                script {
                    // Ensure the right version of NuGet is installed
                    bat 'nuget restore ${env.SOLUTION}'
                }
            }
        }

        stage('Build Solution') {
            steps {
                script {
                    // Use MSBuild to build the solution
                    bat "msbuild ${env.SOLUTION} /p:Configuration=${env.BUILD_CONFIGURATION} /p:Platform=${env.BUILD_PLATFORM} /p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation=${env.WORKSPACE}\\App_Package"
                }
            }
        }

        stage('Publish Artifact') {
            steps {
                archiveArtifacts artifacts: 'App_Package/**/*.zip', allowEmptyArchive: true
            }
        }

        stage('Deploy') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'dotnetuser', passwordVariable: 'CREDENTIAL_PASSWORD', usernameVariable: 'CREDENTIAL_USERNAME')]) {
                    powershell '''
                    
                    $credentials = New-Object System.Management.Automation.PSCredential($env:CREDENTIAL_USERNAME, (ConvertTo-SecureString $env:CREDENTIAL_PASSWORD -AsPlainText -Force))

                    
                    New-PSDrive -Name X -PSProvider FileSystem -Root "\\\\DESKTOP-8I53PQC\\dotnetapp" -Persist -Credential $credentials

                    
                    Copy-Item -Path '.\\publish\\*' -Destination 'X:\' -Force

                    
                    Remove-PSDrive -Name X
                    '''
                }
                }
            }
        }
    }

    post {
        success {
            echo 'Build, test, and publish successful!'
        }
    }
}
